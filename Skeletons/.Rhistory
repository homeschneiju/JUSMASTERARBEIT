############
### PRELIMINARIES - LOAD
###############
reqpackages <- c("tseries", "forecast", "reshape2", "urca")
for (i in reqpackages){
install.packages(i); library(i)
}
# load data
data(Seatbelts)
for (i in reqpackages){
install.packages(i); library(i)
}
print(i)
for (i in reqpackages){
print(i)
#install.packages(i); library(i)
}
for (i in reqpackages){
print(eval(i))
#install.packages(i); library(i)
}
for (i in reqpackages){
#print(eval(i))
install.packages(eval(i)); library(i)
}
#print(eval(i))
install.packages(eval(i)); library(eval(i))
for (i in reqpackages){
#print(eval(i))
install.packages(eval(i))
library(eval(i))
}
for (i in reqpackages){
#print(eval(i))
install.packages(eval(i))
library(i)
}
for (i in reqpackages){
#print(eval(i))
install.packages(eval(i))
library(str(i))
}
for (i in reqpackages){
#print(eval(i))
install.packages(str(i))
library(str(i))
}
#print(eval(i))
install.packages(paste(i))
library(paste(i))
for (i in reqpackages){
#print(eval(i))
install.packages(paste(i))
library(paste(i))
}
for (i in reqpackages){
#install.packages(i)
library(paste(eval(i)))
}
library(reqpackages)
library(tseries)
reqpackages[1]
eval(reqpackages[1])
parse(eval(reqpackages[1]))
eval(parse(reqpackages[1]))
tr(reqpackages[1])
str(reqpackages[1])
eval(reqpackages[1])
library(eval(reqpackages[1]))
library(parse(eval(reqpackages[1])))
library(forecast)
library(reshape2)
library(urca)
# load data
data(Seatbelts)
#ts_freight <- ts(data[complete.cases(data),])
flosa <- Seatbelts[,"DriversKilled"]
windows()
par(mfrow=c(2,1))
plot(aggregate(flosa,FUN=mean))
boxplot(flosa~cycle(flosa))
# look for p and q
par(mfrow=c(2,1))
acf(flosa) # 5
pacf(flosa, plot = T) # 3
#looks like ARMA(5,2)
autofit <- auto.arima(flosa)
summary(autofit)
fit <- arima(flosa,c(3,0,1), list(c(2,0,0)))
fit <- arima(flosa,c(3,0,1), list(order = c(2,0,0)))
summary(fit)
summary(autofit)
fit <- arima(flosa,c(3,0,1), list(order = c(2,0,0)), include.mean=F)
#cycle(flosa)
adf.test(flosa, alternative="stationary", k=0)
# TREND /stationarity
linearModel = lm(flosa ~ time(flosa))
plot(flosa)
abline(reg = linearModel, col="red")
#cycle(flosa)
adf.test(flosa, alternative="stationary", k=0)
#cycle(flosa)
adf.test(flosa, alternative="stationary")
# apply differencing
difflosa = diff(flosa, differences = 12)
#cycle(flosa)
adf.test(difflosa, alternative="stationary")
#cycle(flosa)
adf.test(flosa, alternative="stationary", k = 10)
#cycle(flosa)
adf.test(flosa, alternative="stationary", k = 12)
# apply differencing
difflosa = diff(flosa, differences = 12)
par(mfrow=c(2,1))
acf(flosa) # 5
pacf(flosa, plot = T) # 3
par(mfrow=c(2,1))
acf(difflosa) # 5
pacf(difflosa, plot = T) # 3
# -> ARIMA(3,1,5)
difautofit <- auto.arima(difflosa)
difautofit
coef(difautofit)
diffit <- arima(difflose, c(3,1,5), list(order = c(0,0,0)))
diffit <- arima(difflosa, c(3,1,5), list(order = c(0,0,0)))
diffit <- arima(difflosa, c(3,1,5), list(order = c(0,1,0)))
diffit <- arima(difflosa, c(3,1,5))
diffit <- arima(flosa, c(3,1,5))
diffit
difautofit # SARIMA(5,1,0)(2,0,0)
# -> ARIMA(3,1,5)
difautofit <- auto.arima(difflosa, seasonal=FALSE)
difautofit # SARIMA(5,1,0)(2,0,0)
diffit # ARIMA(3,1,5)
packs <- c("tseries", "forecast", "reshape2", "urca")
Install_And_Load <- function(packages) {
k <- packages[!(packages %in% installed.packages()[,"Package"])];
if(length(k))
{install.packages(k, repos='https://cran.rstudio.com/');}
for(package_name in packages)
{library(package_name,character.only=TRUE, quietly = TRUE);}
}
Install_And_Load(packs)
getwd()
substr(getwd(), 1, nchar(getwd()) - Remove_Characters)
Remove_Characters?
packs <- c("tseries", "forecast", "reshape2", "urca")
Install_And_Load <- function(packages) {
k <- packages[!(packages %in% installed.packages()[,"Package"])];
if(length(k))
{install.packages(k, repos='https://cran.rstudio.com/');}
for(package_name in packages)
{library(package_name,character.only=TRUE, quietly = TRUE);}
}
Install_And_Load(packs)
# load data
data(Seatbelts)
#ts_freight <- ts(data[complete.cases(data),])
flosa <- Seatbelts[,"DriversKilled"]
#cycle(flosa)
adf.test(flosa, alternative="stationary")
# apply differencing
difflosa = diff(flosa, differences = 12)
# -> ARIMA(3,1,5)
difautofit <- auto.arima(difflosa, seasonal=FALSE)
diffit <- arima(flosa, c(3,1,5))
difautofit # SARIMA(5,0,0)
#cycle(flosa)
adf.test(flosa, alternative="stationary", k=4)
# -> ARIMA(3,1,5)
difautofit <- auto.arima(difflosa, seasonal=FALSE)
diffit <- arima(flosa, c(5,0,0))
difautofit # SARIMA(5,0,0)
diffit # ARIMA(3,1,5)
diffit <- arima(flosa, c(5,0,0), allowmean=F)
diffit <- arima(flosa, c(5,0,0), include.mean=F)
difautofit # SARIMA(5,0,0)
diffit # ARIMA(3,1,5)
diffit <- arima(difflosa, c(5,0,0), include.mean=F)
difautofit # SARIMA(5,0,0)
diffit # ARIMA(3,1,5)
diffit <- arima(difflosa, c(4,0,0), include.mean=F)
diffit # ARIMA(3,1,5)
#cycle(flosa)
adf.test(flosa, alternative="stationary", k=4)
